from aiogram import Router, F
from aiogram.types import CallbackQuery
from database.crud import add_to_cart, get_cart_items
from database.db_helper import get_db
from keyboards.inline_keyboards import get_cart_kb, get_product_view_kb, get_back_to_menu_kb
from database.models import CartItem, Product
from aiogram.types import InputMediaPhoto

router = Router()

@router.callback_query(F.data.startswith("add_to_cart_"))
async def add_to_cart_handler(callback: CallbackQuery):
    product_id = int(callback.data.split("_")[-1])
    user_id = callback.from_user.id

    db_gen = get_db()
    db = next(db_gen)

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É (–µ—Å–ª–∏ –µ—Å—Ç—å ‚Äî —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
    add_to_cart(db, user_id, product_id, quantity=1)

    await callback.answer("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!", show_alert=False)
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥ —Ç–æ–≤–∞—Ä–æ–º ‚Äî –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—á—ë—Ç—á–∏–∫
    # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ


@router.callback_query(F.data == "open_cart")
async def show_cart(callback: CallbackQuery):
    user_id = callback.from_user.id
    db_gen = get_db()
    db = next(db_gen)
    items = get_cart_items(db, user_id)

    if not items:
        text = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞."
        await callback.message.edit_media(
            media=InputMediaPhoto(media="https://static.insales-cdn.com/files/1/5466/40031578/original/Logo_Only_Black__1___1_.png", caption=text),
            reply_markup=get_back_to_menu_kb()
        )
        return

    text = "üõí <b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:</b>\n\n"
    # total = 0.0
    # for item in items:
    #     subtotal = item.product.price * item.quantity
    #     total += subtotal
    #     text += f"‚ñ™Ô∏è {item.product.name}\n"
    #     text += f"   {item.quantity} √ó {item.product.price:.0f}‚ÇΩ = <b>{subtotal:.0f}‚ÇΩ</b>\n\n"
    # text += f"üí≥ <b>–ò—Ç–æ–≥–æ: {total:.0f}‚ÇΩ</b>"

    await callback.message.edit_media(
        media=InputMediaPhoto(media="https://static.insales-cdn.com/files/1/5466/40031578/original/Logo_Only_Black__1___1_.png", caption=text),
        reply_markup=get_cart_kb(items)
    )

@router.callback_query(F.data == "open_cart_from_product")
async def open_cart_from_product(callback: CallbackQuery):
    await callback.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º "—á–∞—Å–∏–∫–∏"
    await show_cart(callback)  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É

@router.callback_query(F.data.startswith("incr_"))
async def increase_quantity(callback: CallbackQuery):
    cart_item_id = int(callback.data.split("_")[1])
    user_id = callback.from_user.id

    db_gen = get_db()
    db = next(db_gen)

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ 1
    item = db.query(CartItem).filter(CartItem.id == cart_item_id, CartItem.user_id == user_id).first()
    if item:
        item.quantity += 1
        db.commit()
        await callback.answer("‚ûï –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
    await show_cart(callback)

@router.callback_query(F.data.startswith("decr_"))
async def decrease_quantity(callback: CallbackQuery):
    cart_item_id = int(callback.data.split("_")[1])
    user_id = callback.from_user.id

    db_gen = get_db()
    db = next(db_gen)

    item = db.query(CartItem).filter(CartItem.id == cart_item_id, CartItem.user_id == user_id).first()
    if item:
        if item.quantity > 1:
            item.quantity -= 1
            db.commit()
            await callback.answer("‚ûñ –¢–æ–≤–∞—Ä —É–±—Ä–∞–Ω")
        else:
            db.delete(item)
            db.commit()
            await callback.answer("‚ùå –¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
    await show_cart(callback)

@router.callback_query(F.data.startswith("remove_"))
async def remove_item(callback: CallbackQuery):
    cart_item_id = int(callback.data.split("_")[1])
    user_id = callback.from_user.id

    db_gen = get_db()
    db = next(db_gen)

    item = db.query(CartItem).filter(CartItem.id == cart_item_id, CartItem.user_id == user_id).first()
    if item:
        db.delete(item)
        db.commit()
        await callback.answer("‚ùå –¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
    await show_cart(callback)

@router.callback_query(F.data.startswith("view_product_"))
async def view_product_in_cart(callback: CallbackQuery):
    product_id = int(callback.data.split("_")[-1])
    db_gen = get_db()
    db = next(db_gen)
    product = db.query(Product).filter(Product.id == product_id).first()

    if not product:
        await callback.answer("–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    text = f"üì¶ {product.name}\n\n"
    text += f"üí∞ {product.price}‚ÇΩ\n"
    text += f"üìù {product.description or '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –∑–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    if product.photo_url:
        await callback.message.edit_media(
            media=InputMediaPhoto(media=product.photo_url, caption=text),
            reply_markup=get_product_view_kb(product_id)
        )
    else:
        await callback.message.edit_text(text, reply_markup=get_product_view_kb(product_id))

@router.callback_query(F.data == "back_to_cart")
async def back_to_cart(callback: CallbackQuery):
    await show_cart(callback)  # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É